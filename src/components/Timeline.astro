---
import { Picture } from 'astro:assets';
import { FaExternalLinkAlt } from 'react-icons/fa';

const { title, featured } = Astro.props;

import { getCurrentLocale } from '@/i18n.mjs';
import { getCollection } from 'astro:content';
import { render } from 'astro:content';

const currentLocale = getCurrentLocale(Astro);

const timelineCollection = await getCollection('timeline');

const timeline = timelineCollection.reverse().filter((entry) => {
    if (entry.filePath === undefined) {
        return false;
    }

	if (entry.filePath.search(new RegExp('src/content/timeline/' + currentLocale + '/.*.mdx$')) === -1) {
		return false;
	}

	if (featured === true && entry.data.featured !== true) {
		return false;
	}

	return true;
});
---

<section class="row content-text padding-500" role="contentinfo" aria-label={ title }>
	<div class="col medium-2-11 xxmedium-12 timeline--title text-center">
		<h2>{ title }</h2>
	</div>
	<div class="col medium-2-11 xxmedium-12">
		<div class="timeline">
			{ timeline.map(async (entry) => {
                const { Content } = await render(entry);
                const data = entry.data;
                
                return (
                    <div class="timeline--item" data-timeline-date={ data.date }>
                        <div class="timeline-item--wrapper">
                            <div class="timeline--content">
                                <h3>{ data.title }</h3>

                                <Content />

                                { (data.technologies || data.link) &&
                                <hr />
                                <ul>
                                    { data.technologies && <li><span>{ data.technologies }</span></li>}	
                                    { data.link && <li><span><a href={ data.link } target="_blank" rel="noopener noreferrer" title={ data.title }>{ data.linkDisplay } <FaExternalLinkAlt /></a></span></li> }
                                </ul>
                                }
                            </div>
                            { data.image && <Picture src={ data.image } formats={['avif', 'webp']} alt={ data.title ?? "" } loading={ data.imageLoading ?? "lazy" } class:list={["timeline--image"]} width="950" /> }
                        </div>
                    </div>
                );
			}) }
		</div>
	</div>
</section>

<style lang="scss">
	.timeline {
		--__timeline-row-gap: var(--spacer-600);

		position: relative;

		display: grid;
		row-gap: var(--__timeline-row-gap);

		padding-block: var(--spacer-400);

		&::before {
			content: '';

			grid-column: 1 / -1;

			position: absolute;
			
			top: 0;

			width: 2px;
			height: 100%;
			background-color: currentColor;
		}
	}

	.timeline--item {
		--__date-padding-block: 4px;
		--__date-padding-inline: 12px;
		--__date-padding-side: var(--spacer-200);

		position: relative;

		&::before, &::after {
			position: absolute;
		}

		&::before {
			content: '';

			width: 1.25rem;
			height: 1.25rem;

			background-color: currentColor;
			border-radius: 50%;

			z-index: 3;
		}

		&::after {
			content: attr(data-timeline-date);

			font-weight: var(--font-weight-bold);
			font-size: 1.1rem;
			color: var(--color-font-secondary);
			line-height: 1.4;

			background-color: var(--color-font-primary);

			z-index: 2;
		}
	}

	.timeline--image {
		margin: 0 !important;

		border: 2px solid currentColor;
		border-radius: .5rem;
		box-shadow: var(--box-shadow-bottom);
	}

	.timeline--content {
		hr {
			margin: .7em 0;

			& + * {
				margin-top: 0;
			}
		}
	}

	@include mixins.breakpoint(xxmedium, up) {
		.timeline--title {
			margin-bottom: var(--spacer-200);
		}

		.timeline {
			&::before {
				left: 50%;
				transform: translateX(-50%);
			}
		}

		.timeline--content {
			grid-row: 1 / -1;
			grid-column: 1 / 2;
		}

		.timeline--image {
			grid-row: 1 / -1;
			grid-column: 2 / 3;
		}

		.timeline--item {
			&::before, &::after {
				top: 50%;
				left: 50%;
			}

			&::before {
				transform: translate(-50%, -50%);
			}

			&::after {
				transform: translateY(-50%);
				padding-block: var(--__date-padding-block);
				padding-inline: var(--__date-padding-side) var(--__date-padding-inline);

				border-radius: 0 100vh 100vh 0;
				box-shadow: var(--box-shadow-right);
			}

			&:nth-child(2n) {
				& .timeline--image {
					grid-column: 1 / 2;
				}

				& .timeline--content {
					grid-column: 2 / 3;
				}

				&::after {
					left: auto;
					right: 50%;

					padding-inline: var(--__date-padding-inline) var(--__date-padding-side);

					border-radius: 100vh 0 0 100vh;

					box-shadow: var(--box-shadow-left);
				}
			}
		}

		.timeline-item--wrapper {
			display: grid;
			grid-template-columns: 1fr 1fr;
			align-items: center;
			column-gap: var(--spacer-400);
		}
	}

	@include mixins.breakpoint(xmedium, down) {
		.timeline {
			--__timeline-row-gap: var(--spacer-1000);

			&::before {
				right: 90px;
			}
		}

		.timeline--item {
			padding-right: 120px;

			&::before {
				top: 50%;
				right: 90px;
				transform: translate(50%, -50%);
			}

			&::after {
				top: 50%;
				right: 0;
				transform: translateY(-50%);

				width: 90px;
				padding-block: var(--__date-padding-block);

				border-radius: 0 .5rem .5rem 0;
				box-shadow: var(--box-shadow-right);

				text-align: center;
				font-size: .9rem;
			}

			&:last-of-type {
				.timeline-item--wrapper {
					&::before {
						display: none;
					}
				}
			}
		}

		.timeline--content:not(:last-child) {
			padding-bottom: var(--spacer-300);
		}

		.timeline-item--wrapper {
			position: relative;

			&::before {
				content: '';

				position: absolute;
				bottom: calc(var(--__timeline-row-gap) / -2);
				left: 0;
				transform: translateY(50%);
				
				width: calc(100% + 120px);
				height: 2px;

				background-color: currentColor;
			}
		}
	}

	@include mixins.breakpoint(medium, down) {
		.timeline {
			&::before {
				display: none;
			}

			padding: 0 0 var(--spacer-500);
		}

		.timeline--item {
			padding-right: 0;

			&::after {
				top: auto;
				right: auto;
				bottom: calc(var(--__timeline-row-gap) / -2);
				left: 50%;
				transform: translateX(-50%);

				width: auto;
				padding: var(--__date-padding-block) var(--__date-padding-inline);

				border-radius: .5rem .5rem 0 0;
				box-shadow: var(--box-shadow-top);

				z-index: 3;
			}
			
			&::before {
				top: auto;
				right: auto;
				bottom: calc((var(--__timeline-row-gap) / -2) + 2px);
				left: 50%;
				transform: translate(-50%, 50%);

				z-index: 2;
			}

			&:last-of-type {
				.timeline-item--wrapper {
					&::before {
						display: block;
					}
				}
			}
		}

		.timeline-item--wrapper {
			&::before {
				width: 100%;
			}
		}
	}

	a svg {
		width: .7em;
		height: .7em;
		margin-left: 5px;
	}
</style>