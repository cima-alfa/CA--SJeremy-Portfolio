---
import { getAbsoluteLocaleUrl, getRelativeLocaleUrl, getRelativeLocaleUrlList } from 'astro:i18n';
import { getCurrentLocale } from '@/i18n.mjs';

const currentLocale = getCurrentLocale(Astro);
const currentPath = Astro.url.pathname.replace(new RegExp('^(' + getRelativeLocaleUrlList().reverse().join('|') + ')'), '').replace(/\/$/, '');

function isCurrentF(path: string): any {
	if (path === currentPath) {
		return 'page';
	}

	return null;
}

function linkF(path?: string, locale: string = currentLocale, absolute: boolean = false): string {
	return absolute ? getAbsoluteLocaleUrl(locale, path) : getRelativeLocaleUrl(locale, path);
}

const { element, path, isCurrent, query } = Astro.props;

let attributes = { ...Astro.props };

delete attributes.element;
delete attributes.path
delete attributes.query;
delete attributes.isCurrent;

const Element = element ?? 'a';

if (attributes.href === undefined && Element === 'a') {
	attributes.href = '{%URL%}';
}

if (isCurrent) {
	attributes['aria-current'] = isCurrentF(path ?? '');
}

for (const [key, value] of Object.entries(attributes)) {
	if (typeof value === 'string' || value instanceof String) {
		attributes[key] = value.replaceAll('{%URL%}', linkF(path ?? '') + (query ?? ''));
	}
};
---

<Element { ...attributes }><slot /></Element>